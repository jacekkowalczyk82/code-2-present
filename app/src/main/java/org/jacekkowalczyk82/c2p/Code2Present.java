/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.jacekkowalczyk82.c2p;

import org.apache.poi.xslf.usermodel.*;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

public class Code2Present {

    private XMLSlideShow p;
    private XSLFSlideMaster defaultMaster;
    private XSLFSlideLayout titleLayout;
    private XSLFSlideLayout layout;


    public void fromTemplate(String templateFileName) {
        try {
            p = new XMLSlideShow(
                    new FileInputStream(templateFileName));

            defaultMaster = p.getSlideMasters().get(0);

            System.out.println("Available slide layouts:");
            for(XSLFSlideMaster master : p.getSlideMasters()){
                for(XSLFSlideLayout layout : master.getSlideLayouts()){
                    System.out.println(layout.getType());
                }
            }


        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }


    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        Code2Present c2p = new Code2Present();
        System.out.println(c2p.getGreeting());

        //code-2-present-template1.pptx
        c2p.fromTemplate("code-2-present-template1.pptx");


        c2p.title("This is Title", "Subtitle Author date");

        c2p.macOsSlide("slide 1", Content.withText("this is a paragraph text on the slide"));

//        c2p.slide("slide 2", Content.withUlList(
//                "Elem 1",
//                "Elem 2")
//        );
//
//        c2p.slide("slide 3",Content.withImage("images/image1.png"));


        try {
            c2p.save("example-presentation.pptx");
        } catch (IOException e) {
            throw new RuntimeException(e);
        }


    }

    public void save(String presentationFileName) throws IOException {

        FileOutputStream out = null;
        try {
            out = new FileOutputStream(presentationFileName);
            p.write(out);

        } catch (FileNotFoundException e) {
            throw new RuntimeException(e);
        } catch (IOException e) {
            throw new RuntimeException(e);
        } finally {
            out.close();
        }


    }

    public void slide(String slideTitle, Content content) {
        if (layout == null) {
            layout
                    = defaultMaster.getLayout(SlideLayout.TITLE_AND_CONTENT);
        }

        XSLFSlide slide = p.createSlide(layout);
        XSLFTextShape titleShape = slide.getPlaceholder(0);
        XSLFTextShape contentShape = slide.getPlaceholder(1);

        titleShape.setText(slideTitle);
        //this is just very beginning version with only text
        contentShape.setText(content.getText());
    }


    public void macOsSlide(String slideTitle, Content content) {
        if (layout == null) {
            layout
                    = defaultMaster.getLayout(SlideLayout.TEXT);
        }

        XSLFSlide slide = p.createSlide(layout);
        XSLFTextShape titleShape = slide.getPlaceholder(0);
        XSLFTextShape contentShape = slide.getPlaceholder(1);

        titleShape.setText(slideTitle);
        //this is just very beginning version with only text
        contentShape.setText(content.getText());
    }

    public void title(String thisIsTitle, String subtitleAuthorDate) {
        if (titleLayout == null) {
            titleLayout
                    = defaultMaster.getLayout(SlideLayout.TITLE);
        }

        XSLFSlide slide = p.getSlides().get(0);
//        XSLFSlide slide = p.createSlide(titleLayout);

        XSLFTextShape titleShape = slide.getPlaceholder(0);
        XSLFTextShape subTitleShape = slide.getPlaceholder(1);

        titleShape.setText(thisIsTitle);
        subTitleShape.setText(subtitleAuthorDate);


    }
}
